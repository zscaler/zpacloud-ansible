---
- name: Include default variables
  ansible.builtin.include_vars:
    file: ../defaults/main.yml

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZSCALER_CLIENT_ID
    - ZSCALER_CLIENT_SECRET
    - ZSCALER_VANITY_DOMAIN
    - ZSCALER_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zpa_cloud:
      client_id: '{{ lookup("env", "ZSCALER_CLIENT_ID") }}'
      client_secret: '{{ lookup("env", "ZSCALER_CLIENT_SECRET") | default(omit) }}'
      vanity_domain: '{{ lookup("env", "ZSCALER_VANITY_DOMAIN") | default(omit) }}'
      customer_id: '{{ lookup("env", "ZPA_CUSTOMER_ID") | default(omit) }}'
      cloud: '{{ lookup("env", "ZSCALER_CLOUD") | default(omit) }}'
  no_log: true

- name: Main block to Test Browser Certificates
  block:
    - name: Fetch all Browser Certificates
      zscaler.zpacloud.zpa_ba_certificate_info:
        provider: "{{ zpa_cloud }}"
      register: result

    - name: Ensure all Browser Certificates found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.certificates is defined

    - name: Fetch Wildcard Certificate(s)
      zscaler.zpacloud.zpa_ba_certificate_info:
        provider: "{{ zpa_cloud }}"
        name: "{{ wildcard_certificate }}"
      register: result

    - name: Ensure Wildcard Certificates found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.certificates is defined

    - name: Fetch Sales Certificate
      zscaler.zpacloud.zpa_ba_certificate_info:
        provider: "{{ zpa_cloud }}"
        name: "{{ sales_certificate }}"
      register: result

    - name: Ensure Sales Certificate is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.certificates is defined

    - name: Fetch Jenkins Certificate
      zscaler.zpacloud.zpa_ba_certificate_info:
        provider: "{{ zpa_cloud }}"
        name: "{{ jenkins_certificate }}"
      register: result

    - name: Ensure Jenkins Certificate is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.certificates is defined
