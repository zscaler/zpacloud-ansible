---
- name: Include default variables
  ansible.builtin.include_vars:
    file: ../defaults/main.yml

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZSCALER_CLIENT_ID
    - ZSCALER_CLIENT_SECRET
    - ZSCALER_VANITY_DOMAIN
    - ZSCALER_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zia_cloud:
      client_id: "{{ lookup('env', 'ZSCALER_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZSCALER_CLIENT_SECRET') }}"
      vanity_domain: "{{ lookup('env', 'ZSCALER_VANITY_DOMAIN') }}"
      cloud: "{{ lookup('env', 'ZSCALER_CLOUD') | default(omit) }}"
  no_log: true

- name: Main block to Test All Predefined Controls
  block:
    - name: Fetch All Predefined Controls
      zscaler.zpacloud.zpa_app_protection_all_predefined_controls_info:
        provider: "{{ zpa_cloud }}"
      register: result

    - name: Ensure All Predefined Controls found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.all_control_groups is defined

    - name: Fetch Predefined Control1
      zscaler.zpacloud.zpa_app_protection_predefined_control_info:
        provider: "{{ zpa_cloud }}"
        name: "{{ control1 }}"
      register: result

    - name: Ensure Predefined Control1 found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.controls is defined

    - name: Fetch Predefined Control2
      zscaler.zpacloud.zpa_app_protection_predefined_control_info:
        provider: "{{ zpa_cloud }}"
        name: "{{ control2 }}"
      register: result

    - name: Ensure Predefined Control2 is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.controls is defined

    - name: Fetch Predefined Control3
      zscaler.zpacloud.zpa_app_protection_predefined_control_info:
        provider: "{{ zpa_cloud }}"
        name: "{{ control3 }}"
      register: result

    - name: Ensure Predefined Control3 is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.controls is defined

    - name: Fetch Predefined Control4
      zscaler.zpacloud.zpa_app_protection_predefined_control_info:
        provider: "{{ zpa_cloud }}"
        name: "{{ control4 }}"
      register: result

    - name: Ensure Predefined Control4 is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.controls is defined

    - name: Fetch Predefined Control5
      zscaler.zpacloud.zpa_app_protection_predefined_control_info:
        provider: "{{ zpa_cloud }}"
        name: "{{ control5 }}"
      register: result

    - name: Ensure Predefined Control5 is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.controls is defined
